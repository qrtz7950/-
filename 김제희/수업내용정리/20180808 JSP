EL
Expression Lauguage

기존의 JSP는  <%%> 스크립트릿이나 표현식을 쓴다
JSP작성시 html 코드 안에 스크립트릿이 들어가 자바와 HTML이 섞인 모습이였는데
이제 HTML코드안에 자바코드를 쓰지 않기 위해 EL이라는 문법이 등장

자바의 클래스 메소드호출 및 집합 객체에 대한 접근 방식을 제공

자바 코드를 쓰지않고 html안에서 자바가 가진 값을 출력하기 위해서
html과 자바가 같이 공유하는 공간에 데이터를 놓고 가져다 쓰기로 하였다

구문
${ expr }
ex 당신의 이름은 ${ expr } 입니다

----------------------------------------------------------

연산자 +, -, /, *, div, %, mod
비교연산자 == != < <= > >=
          eq ne lt le lt le
          
el에서 객체 찾기 기본적으로 el에 객체가 입력되면 기본적으로 제공되는 객체명과 같은지 비교하고
찾지 못했다면 서블릿과 jsp가 같이 공유하는 영역에서
4가지의 공유 영역에서 객체를 찾는다

JSP : pageContext request session application
el  : pageScope requestScope sessionScope applicationScope

el를 사용하지 않는 순수 JSP파일에서의 공간들과 el이 사용하는 공간들이 각 서로 공유된다

데이터의 영속성 : 데이터를 얼마나 유지할 것인가
뒤에 있는 공간일 수록 데이터의 영속성이 길다

위에 쓰여진 순서대로 탐색하나
특정영역을 지정하여 탐색이 가능하다
ex) requestScope.name (requestScope영역의 name을 탐색하여 출력)

객체를 등록할수 있는 곳은 오직 공유영역뿐이고 이 이외에 값을 등록하려면
el은 표현식이기 때문에 객체를 등록시킬수는없고 서블릿의 문법 스크립트릿을 이용하여 객체를 등록해야한다

//pageContext request session application
//공유영역.setAttribute(name , value)
pageContext.setAttribute("id", "hong1234")
pageContext.setAttribute("name", "홍길동")
request.setAttribute("name", "임꺽정")
session.setAttribute("userInfo", "sbc:1234")

라고 각 영역에 등록이 가능하고 각 영역에 있는 값들을 찍기 위해서는
<body>
  <!-- 
    el 공유 영역
    pageScope requestScope sessionScope applicationScope
  -->
  id : ${ id }<br> <!-- hong1234 -->
  name : ${ name }<br> <!-- 홍길동 -->
    <!-- 순서에 의해서 홍길동 밖에 안나오는데 임꺽정을 찍고 싶다면? -->
    <!-- 공유 영역을 설정하여탐색한다 -->
  name : ${ requestScope.name }<br> <!-- 임꺽정 -->
  userInfo ${user}<br>                <!-- sbc:1234 -->
  userInfo ${sessionScope.user}<br>   <!-- sbc:1234 -->
    
    
  
</body>


그럼 이 공유 영역에서의 데이터들을 다루는 법은 무엇인가 (삭제 수정 등록)

