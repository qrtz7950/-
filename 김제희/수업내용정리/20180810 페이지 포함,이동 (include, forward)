모든 코드에 중복을 적게 만들기 위함이 목적

사이트의 상단바와 같이 어디로 이동해도 변하지 않는 부분을 모든 페이지에 넣는 것이 아니라

하나의 JSP파일로 빼서 코드의 중복을 줄임

------------------------------------------------------------------
INCLUDE

페이지 내용을 포함하는 3가지 방식

directive 지시자 - include
action(액션) - include
JSTL - import

<%@include file = "파일 경로" %>

시점 JSP가 java로 변환될 때 같이 포함(서블릿 자체에는 공통의 내용이 없으나 .java로 변환될 때 포함된다)

활용
  JSP 페이지에서 사용되는 공통 변수 지정
  각 페이지에 고정적으로 사용되는 내용 처리
  : 사이트 하단 부분

그러나 너무 남용하면 자바 코드 자체가 길어지고 자바 코드가 너무 길어지면 오류가 발생하므로
변화가 많지 않은 부분이 include를 이용하여 들어간다
ex) footer

그러나 이 방법으 모든 코드에 복사 되어 비 효율적이므로 보통action include를 이용한다

---------------------------------------------------------------------
action include

커스텀 태그 중에 하나다
jsp가 붙은 태그들을 액션 태그라고 한다
<jsp:include page = "파일경로"/>

<jsp:include page = "파일경로"/>
  <jsp:param name="msg" value="Hello action inculde"/>
</jsp:include>

포함되는 방식이 변환될 때 복사 붙여넣기하여 모든 파일이 들어가는 것이 아니라
메소드나 함수를 호출하듯이 실행하는 시점에 불러와지므로 나의 코드가 길어지지 않는다
인클루드를 호출한 파일과 원래의 action include 파일 사이에서 데이터를 주고받는다

b를 포함한 a가 있다고 해보자
하나의 request에서 a를 호출하면 a를 실행하다가 b를 실행시키는 구문을 만나면 b를 실행시키고 
b의 실행이 끝나면 다시 a로 돌아온다 나온 결과를 클라이언트에게 responce
하나의 request에서 두개의 파일을 공유하므로 a가 b에게 파라미터값을 넘기기 위해
request영역을 이용한다 그러나 액션 인클루드에서는 단방향으로만 파라미터 값을 넘길수 있기때문에
a->b는 가능하나 b->a는 불가능하다

활용
-JSP 페이지 내의 중복적인 부분을 처리 ex)메뉴

---------------------------------------------------------------------------

지시자와 액션 방식의 차이점

처리시간 실행시 결과 처리 JSP파일

-----------------------------------------------------------------------------
JSTL - import

다른 페이지의 실행 결과를 내 페이지로 포함기킴

<c:import url="파일 경로">
      <c:param name="msg" value="햐햐햫">
<c:import/>

액션 인클루드와의 차이는 액션은 같은 서버에 있는 파일만 임포트가능
임포트는 다른 서버에 있는 파일도 임포트 가능하다




