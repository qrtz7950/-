호출된 페이지에서 다른 페이지로 요청 처리가 이동
요청이 재 발생되어 데이터 공유가 되지않음

구문 response.sendRedirect(url)
얘를 쓰려면 스크립트릿을 써야함

exresponse.sendRedirect("http://www~~~~")
서버는 응답해야하는 페이지를 제어할 분 직접 데이터를 담아 응답하지는 않는다
그러나 이런 응답 과정에서 클라이언트의 요청시 서버가 바로 응답하여 데이터가 말소되므로 정보공유는 불가능하다

포워드의 경우에는 responce의 정보를 공유영역에 올려 다음 파일로 보내 응답을 다른 파일에서 하게 만드는 것이였지만
샌드 리라이트는 서버는 제어할 뿐 응답을 다른 파일에서 함

다른 파일을 재호출하는 것뿐이기때문에 url의 변화도 일어나지 않는다.

-------------------------------------------------------------------

상태정보 유지기술

쿠키 세션

http 방식은 커넥트리스 방식이기 때문에 하나의 요청과 응답뒤에 연결이 끊어져 정보를 유지하기가 힘들다
어떤 임의의 값을 계속해서 유지하기 위해 등장하였다

쿠키는보안성이 떨어져 요즘 세션으로 옮겨가는 추세

-------------쿠키의 특성 --------------------
정보저장 위치 사용자 컴퓨터 
서버의 부하가 분산된다
보안성의 문제가 발생 가능
정보저장 유효기간을 사용자가 설정한다.(브라우저가 닫힌 이후에도 유지)
한 사이트에서 저장할 수 있는 쿠키 객체는 한정되어 있음 (20개)
사용자 컴퓨터에 저장할 수 있는 쿠키 한계치 (300개)가되면 랜덤하게 저장되어 있는 쿠키가 삭제된다

저장 형태는 key + value 단위는 스트링만 가능

한글 저장시에는 반드시 인코딩해야함

저장은 사용자 컴퓨터에서 하지만 필요한 것은 서버 이기때문에 요청시 쿠키도 같이 전송된다

-------------쿠키의 생성 --------------------

<%
  Cookie cookie = new Cookie("name","value");
  response.addCokkiew(cookie)
%>

겍체 얻어오기
Cookie[] cookies = request.getCookies();

getName()
getValue() 메소드를 이용하여 쿠기의 데이터 값을 얻는다

-------------쿠키의 구성--------------------

이름(name)        : 각 쿠키 구별을 위해 사용
값(value)         : 쿠키의 이름과 관련된 값
유효시간(maxAge)  : 쿠키의 유지시간
도메인(domain)    : 쿠키를 전송할 도메인
경로(path)        : 쿠키가 저장되는 경로

아스키 코드의 알파벳과 숫자만을 포함할 수 있다
콤마 세미콜론 공백 등의 문자는 포함할 수 없다
$로 시작할 수 없다

쿠키는 값으로 한글과 같은 문자를 가질 수 없음

설정하고자하는 값의 인코딩과 받는 쪽에서 값을 디코딩하는 과정이 필요하다

-----------------쿠키의 유효시간-------------------------------------

아무것도 설정하지 않았을 때의 디폴트 맥스에이지는 브라우저가 꺼질때 까지

Cookie.setMaxAge(int maxAge) 초단위 설정

setMaxAge(0);      // 쿠키 삭제
setMaxAge(-1)      // 브라우저 닫을 때 쿠키 삭제
setMaxAge(60*60*24)// 1일 설정

-----------------쿠키 도메인과 경로-------------------------------------

우리 사이트는 도메인이 없어서 적용은 불가능

쿠키 도메인 지정 시 해당 도메인에 쿠키전달

cookie setDomain("String dmain")

.bitacamedy.net 점으로 시작하는 경우 관련 도메인에 모두 쿠키를 전송한다
ex)www.bitacamedy.net

경로 미 설정시 요청 URL의 경로에 대해서만 쿠키 전달
경로 설정시 설정한 경로 및 그 하위 경로에 대해서 쿠키 전송

------------------------------------------------------------------------------------------
세션!

세션의 특성

쿠키는 클라이언트 컴퓨터에 저장되나 세션은 서버에 저장된다
정보저장위치: 서버
서버의 부하가 가중된다
보안상의 문제 발생 소지를 줄인다.
보안상의 문제 발생 소지를 줄인다
정보저장 최대 유효기간이 브라우저가 닫힐 때 까지이다
정보 저장 시 객체 타입이 가능하다

웹컨테이너 (4가지 공유영역)에서 클라이언트의 정보를 보관할 때 사용
오직 서버에서만 생성
클라이언트마다 세션이 생성

page 지시자의 session속성 값을 true로 지정
세선이 존재하지 않을 경우 세션이 생성되고 세션이 존재할 경우 이미 생성된 세션을 사용
jsp에서는 디폴트가 true

----------------세션 종료/타임아웃----------------------------
세션 타임 아웃 시간 설정
-web.xml에 설정(분 단위)
<session-config>
  <session-timeout>
    30
  </session-timeout>
</session-config>

프로그램 설정 API설정 초단위
session.setMaxInactiveInterval(int interval);

-----------------세션 주요 api 메소드---------------------------
세션 객체 얻기
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpServletRequest.getSession(boolean create)

//세션이 없을 경우 새롭게 생성 존재한다면 존재하는 객체 반환
세션이 없을 경우 null = request.getSession(false);





