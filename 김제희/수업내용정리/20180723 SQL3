비어있는 공간이 있을 수 있는 컬럼이 여러개 붙은 테이블은 대규모 정보 저장시 비어있는 공간 때문에

공간의 낭비가 있을 수 있다 때문에 비어있을 수 있는 컬럼이 포함된 컬럼만 분리하여 두개의 테이블로 만든다

여러개의 테이블로 쪼개고 쪼개 공간을 절약

정규화는 검색을 빠르게하면서 중복을 허용하지 않는것이다

중복을 혀용하지 않기 위해 테이블을 여러개로 쪼재고 나니 조회할 때 여러개의 테이블을 동시에 조회해야할 필요가 생겼다

이를 위해 join을 사용한다.

우리가 사용하는 hr계정의 employee 테이블도 널이 있을수도있는 테이블로 분리되어있다

중복이 많은 테이블의 예를 보자 
직원들 테이블에서 부서번호가 10이고 부서명이 임원진인 애들을

부서명을 짱짱맨으로 바꾸고 싶을 때 하나의 테이블에 모든 정보가 입력되어있다면

부서번호가 10인 모든 row의 값을 수정해야하지만 테이블을쪼개  부서명의 레퍼런스 값을 가지는 부서명 테이블을 만들면

모든 row의 값을 수정하는 것이 아니라 부서명 테이블의 레퍼런스 이름만 바꾸면 모든 임원진들의 부서명의 부서번호는 동일하나

부서명을 수정할 수 있게된다

분리시킨 테이블의 값이 오리지날 테이블의 어떤 row에서 나온지 구분하기 위해
분리시킨 테이블의 값들은 오리지날 테이블의 프라이머리 키값을 구분자로 가진다
다른 테이블을 접근하기위한 키값을 포링키(Foregign key)라고한다

포링키는 다른 테이블의 프라이머리키여야한다


