Servlet/JSP

자바 플랫폼에서 컴포넌트 기반의 웹 어플리케이션 개발기술
JSP는 서블릿 기술에 기반
서블릿의 프리젠테이션 문제를 해결하기위해 JSP가 등장
JSP모델 2가 주목받으며 다시 서블릿에 대한 중요성 부각


웹에서 동작하는 서블릿 클래스가 되기 위해서는 다음 3가지 클래스 중 하나를 상속받아야한다.

Servlet         인터페이스

GenericServlet  추상클래스

HttpServlet     추상클래스

서블릿 생명주기

서블릿 클래스는 기본적인 메소드 호출순서 lifeCycle이 존재

init    최초 한번만 실행
service 사용자 요청에 대한 실제 응답 처리 진행
destroy 메모리에서 해제될경우 호출  ex) 서블릿 내용변경, 서버 재구동
init -> service -> destroy

톰캣에서 서버를 구현했을때 해당 서버가 자바를 이용할 수 있는 엔진을 가지고 자바를 접목하기위해서는
WEB-INF 라는 폴더가 있다
하위에서는 classes, lib, web.xml 이라는 폴더 두 개와 파일 1개가 필요하다
classes - 서블릿관련 파일들(바이너리 파일 .class)
lib     - 외부 jar파일들 드라이버
web.xml - 환경설정파일

WEB-INF는 보안 폴더이며 외부에서 접근할 수 없다 이러면 웹에서 보내는 요청에도 답할 수 없기 때문에
서블릿 파일들에 접근하기 위해 해당 폴더에 대한 가상 접근경로가 있다
웹 서버에서는 가상 경로를 WEB-INF의 위치로 매핑한다
이 매핑 방식에는 두 가지가 있음
servlet 2.5 버전까지는 xml를 사용하여 매핑
servlet 3.0 버전부터는 어노테이션을 이용하여 가상경로와 실제 파일을 매핑하는 방식을 사용
