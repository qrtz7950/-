1교시

과제 풀이

--------------------------------------------------------------------------------

2교시

브레이크를 이용한 LoopMain04

분기문에는 왠만하면 break문을 사용하지 않도록 권고된다

자바에서 브레이크가 좋은점?

continue 반복문의 특정지점에서 제어를 반복문의 처음으로 보낸다.
--------------------------------------------------------------------------------

for(int i =1; i<=3; i++) {
  print(hello);
  continue;
  println(hello);
}
result: hellohellohello

중첩된 반복문 한번에 빠져나오기

j for문 안에 있지만 i for문까지 탈출하고 싶다
자바는 이런 기능을 제공하는 문법이 있다
자바에만 특정위치로 break;하는 기능이 있다

스위치나 반복문에서 사용가능 if는 안됨


--------배열---------

※지금까지 배운 문법으로 모든 문제를 해결할 수 있지만 이 뒤부터는 개발자의 노가다를 해결하기위해 만들어진 문법들

자바에서는 배열을 그리 많이 쓰지않는다 대신에 콜렉션이라는 문법을 더 많이 사용하기 때문 메모리적으로 성능이 더 좋아서

콜렉션의 이해를 위해서 배열을 아는 편이 좋다.

매번 같은 타입의 변수 선언하기 귀찮아서 만들어짐

배열: 같은 타입의 변수들을 모아놓은 집합
     좀 더 좁은 범위에서의 배열이란 연속적인 공간에 같은 타입의 변수를 고정된 갯수만큼 모아둔 집합이다

자바에서의 배열의 개념은 이것보다 더 넓지만 기본적인 정의는 이러하다

int a,b,c,d;
a b c d
□ □ □ □
를 배열로 만들어서

□□□□
0호집에서는 a
1호집에서는 b
2호집에서는 c
3호집에서는 d

배열도 일종의 참조자료형이다

참조 자료형 str을 보자

String str = "Hello";
String str = new String("hello")

str이라는 변수에 hello가 저장되는것이 아니라 str안에는 hello라는 스트링이 있는 주소만을 가리킨다

※new = 새로운 것을 만든다
배열 int[] ar = new int[4];

같은 타입의 변수를 어떻게하면 좀더 효율적이고 빠르게 저장할수있을까

배열이란?
같은 종류의 데이터를 저장하기위한 자료구조
크기가 고정되어있다 한번 생성된 배열은 크기를 바꿀수없다
배열을 객체로 취급
배열의 요소를 참조하려면 배열 이름과 색인이라고하는
int유형의 정수값을 조합하여 사용한다.

-배열의 선언

int prime [] = int [] prime

배열안에 값이 들은것이 아니라 주소값을 가진 것이기때문에 해석을 용이하게하기위해

int [] prime 과 같은 형태를 더 많이 이용한다.

------------------------------------------------------------------------------------------------------------

3교시

ex) 
1차원배열
prime = new int[10]

타입  배열이름  선언
int   iArr    int

stack에 저장되는 것들

자료형 변수명;

이 변수 안에 저장할 수 잇는 공간도 같이 생긴다

HEAP에 저장되는 것들

컴퓨터에서 여러 값들이 저장되는데 이를 변수명으로 저장하게되면
여러개의 프로그램을 돌릴때 겹치는 변수에 대한 구분을 컴퓨터는 하지 못하게된다
때문에 컴퓨터는 이를 주소값으로 구분한다
컴퓨터에게 변수명보다 값이 있는 주소값이 더 중요

자료를 저장하려고 해도 이 공간을 지칭할 수 없다
단지 저장할 수 있는 공간을 만들뿐이다

stack에 저장된 주소값을 이용하여 HEAP에 저장되어잇는 값을 이용한다

와! 포인터!

변수를 선언하면 stack메모리에 저장된다

new를 이용해서 만드는 것들은 HEAP에 저장된다

int a = 10;
String str = new String("hello")
int[] ar = new int[4]

의 경우에 a str ar은 스택에 저장되나

new String("hello")이나 new int[4]는 hello를 저장할 공간 4개의 인트형 자료를 저장할 공간을 만들뿐이다 

이 공간을 지칭하는 명칭은 없다

정리해서 참조변수를 만들때 사용하는 new는 주소값을 기억하는 변수를 만드는것 포인터를 만드는 것

-----------------

배열을 생성하면 자동적으로 배열요소들은 기본값으로 초기화된다
int 0
boolean false
char \u0000
참조형 null

멤버변수와 로컬변수 모두 배열이 생성이되면 자동초기화된다

int[] dongList;       //값을 넣을 공간만들기
dongList new int[3];  //그 공간에는 인티저 자료형값이 3개들어간다 값은 자동초기화된 값 0이 들어간다

--------------------------------------------------------------------------------------------------
5교시

어레이 예제

//정수를 저장하는 배열 iArr를 선언
//정수나 실수값이 아닌 주소값을 가진 변수 이것을 참조변수라고한다.
int[] iArr;
//정수를 다섯개 저장하는 배열 성성
iArr = new int[5];

--------------------------------------------------------------------------------------------------
6교시

자바는 가비지 콜렉터 가 자동으로 사용하지 않는 쓰레기 값을 정리해주기 때문에 메모리 누수를 걱정할 필요는 없으나
우리가 이 가비지 콜렉터가 언제 작동할지는 알 수 없다.

자바에서는 배열의 인덱스를 이용하지 않아도 배열을 값을 출력할 수 잇는 방법이 있다 그것을 알아보자

shallow copy(얕은 복사) : 원본은 하나고 참조변수만을 복사하는것
deep copy(깊은 복사): 원본의 내용도 복사하는 것

--------------------------------------------------------------------------------------------------
7교시


