1교시

숙제풀이

--------------------------------------------------------------------------------------------------

2교시

스위치문은 n개중에 1개의 문장을 선택하는게 아닌 n개의 문장을 m개의 문장을 선택할 수 있다 (다중 선택문)

원칙적으로는 if <-> swith문의 전환이 자유로우나

자바는 모든 switch문을 if문으로 만들수는 없다

if(a=조건1){}
if(a=조건2){}
else error

라는 코드는

if(a=조건1){
} else if(a=조건2) {
} else {
  error
}

라는 코드보다 구리다 중첩 if문을 사용했을 때 조건 1이 만족된다면 나머지 else if 나 else는 살표보지 않으나
if문이 여럿이라면 이미 조건1을 만족해도 나머지 문장을 수행하기 때문이다.

위와 코드처럼 모든 조건을 변수와 값을 비교하는 동등 비교로 물어보는 코드는 스위치문으로 바꿀수 있다
a는 1이야? a는 2야?

스위치로 바꾸면 num의 값은 무엇인지를 물어봐서

switch(a) {
case 조건1 :
case 조건2 :
default : default와 else의 역활은 같다
}

로 바뀔 수 있다 그러나 case n은 단지 그곳만 수행하게 제어하는 것이 아니라 수행하는 시작점만을 지정하는것이기 때문에 
위의 코드에서 조건1을 만족하면 조건1에서의 문장부터 스위치문의 브레이스가 나올때 까지 (스위치문의 모든 문장을) 수행해버린다
그래서 브레이크를 걸어줘야된다 문장 수행중 브레이크를 만나면 스위치 끝에 있는 브레이스로 점프한다
브레이크는 스위치를 빠져나가는 구문이기 때문에 스위치문이 아닌곳에서 사용하면 빠져나갈 곳이 없어 신텍스 에러가 난다아아ㅏ아

스위치문 안에 case와 default등의 위치는 실행에 문제가 없으나 그렇게짜면 변태새끼다

case 뒤의 조건에는 모든 자료형이 들어 올 수는 없다
자바는 좀더 세밀하게 안에 들어올 수 있는 타입이 설정되어있다

1.4버젼까지는 문자와 정수형만 가능했다
1.5버젼부터 enum이라는 열거형 상수값을 사용할 수 있게됬다
1.7버젼부터 문자열도 가능
우리가 쓰는 1.8버젼은 이 모두를 포함한 문자 정수 열거열상수 문자열이 들어왈수 있다

강사님이 1.6버젼에서 스위치 조건문에 문자열을 사용할 수 없다는 예시를 보여줌

스위치 조건문을 시작을 정해주는 것이기 때문에 이런식으로 조건을 설정해도된다
ex)
case "WINTER" :
case "winter" :
			System.out.println(season + "은 12월 - 2월까지입니다");

--------------------------------------------------------------------------------------------------
3교시

import LoopMain01.java

반복문을 위해서는 4가지 조건이 필요하다

1. 반복할 문장
2. n번 수행하기위한 시작값
3. 시작값을 변경하는 코드
4. 종료 조건 (반복을 종료하기위해 시작값을 체크하는 코드)

반복문 기본요소
 1.반복할 문장
 2.시작값
 3.증가/갑소
 4.종료조건

그러나 이 4가지가 꼭 필수 요소는 아니다 필요에 따라 조건을 덜쓸수도잇따

이 4가지의 조건을 어떻게 배치하는지에 따라 while, for, do while 로 나뉜다

if는 조건의 참이면 브레이스 거짓이면 브레이스를 탈출하나
while은 조건이 거짓이 될때까지 문장을 반복한다.

while(조건) { 
 	운동장 한바퀴 뛴다;
 }

시작값이 while 브레이스 안에 있으면 초기 시작값으로 계속해서 초기화되기때문에
시작값은 루프 바깥에 위치해야한다

while 조건문이 거짓으로 바뀔 수 없을 때는 무한 루프

for문을 배워보자
for문도 while문과 같이 조건이 거짓이 될 떄까지 루프를 돈다
for문 조건문안에서도 변수를 선언할 수 있지만 그 변수는 for문 안에서만 사용가능하다
그 지역에서만 사용할수 있다 와!지역변수!

반복문마다 특징을 알아보자

절대적이지는 않지만 일반적으로
for문은 루프를 돌리려는 횟수나 규칙적인 증감소의 경우
while문은 루프의 종료조건만 알고있을 때 사용

for나 while은 루프의 최소횟수가 1이다
루프의 최소 회수 1이상인 기능을위해 do while 사용
이러한 특성때문에 에러체크등에 이용된다

오늘의 점심은
日日香

------------------------
5교시

반복문 중첩! 





